Thu 14 Sep 2023 02:22:19 PM UTC: 
 tests:  1|8
total_score: 0/70
c62c5f1
Thu 14 Sep 2023 11:57:34 PM UTC: 
 treemap.c | 5 +++++
 1 file changed, 5 insertions(+)
In file included from test.c:4:
treemap.c: In function ‘createTreeMap’:
treemap.c:41:7: error: suggest parentheses around assignment used as truth value [-Werror=parentheses]
   41 |   if (map =NULL){
      |       ^~~
cc1: all warnings being treated as errors
Compilation failed
95d378e
Thu 14 Sep 2023 11:57:45 PM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  1|8
total_score: 0/70
fb3cbe2
Fri 15 Sep 2023 12:03:39 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘createTreeMap’:
treemap.c:47:5: error: expected identifier before ‘return’
   47 |     return NULL;
      |     ^~~~~~
treemap.c:48:1: error: control reaches end of non-void function [-Werror=return-type]
   48 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
5f0c390
Fri 15 Sep 2023 12:04:49 AM UTC: 
 treemap.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘createTreeMap’:
treemap.c:44:19: error: ‘lt’ undeclared (first use in this function)
   44 |   map->lower_than=lt;
      |                   ^~
treemap.c:44:19: note: each undeclared identifier is reported only once for each function it appears in
Compilation failed
109f501
Fri 15 Sep 2023 12:08:30 AM UTC: 
 treemap.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘createTreeMap’:
treemap.c:48:23: error: ‘lt’ undeclared (first use in this function)
   48 |     map->lower_than = lt;
      |                       ^~
treemap.c:48:23: note: each undeclared identifier is reported only once for each function it appears in
treemap.c: At top level:
treemap.c:56:5: error: expected identifier or ‘(’ before ‘return’
   56 |     return NULL;
      |     ^~~~~~
treemap.c:57:1: error: expected identifier or ‘(’ before ‘}’ token
   57 | }
      | ^
Compilation failed
ed394b8
Fri 15 Sep 2023 12:08:46 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘createTreeMap’:
treemap.c:48:23: error: ‘lt’ undeclared (first use in this function)
   48 |     map->lower_than = lt;
      |                       ^~
treemap.c:48:23: note: each undeclared identifier is reported only once for each function it appears in
treemap.c: At top level:
treemap.c:56:5: error: expected identifier or ‘(’ before ‘return’
   56 |     return NULL;
      |     ^~~~~~
Compilation failed
f544ccd
Fri 15 Sep 2023 12:10:45 AM UTC: 
 treemap.c | 19 +++----------------
 1 file changed, 3 insertions(+), 16 deletions(-)
test.c: In function ‘createTreeMap’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:607: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
9592f27
Fri 15 Sep 2023 12:11:11 AM UTC: 
 treemap.c | 6 ++++++
 1 file changed, 6 insertions(+)
 tests:  4|7
total_score: 5/70
afeeadc
Fri 15 Sep 2023 12:11:33 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘insertTreeMap’:
treemap.c:54:1: error: expected declaration specifiers before ‘}’ token
   54 | }
      | ^
treemap.c:56:33: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   56 | TreeNode * minimum(TreeNode * x){
      |                                 ^
treemap.c:62:49: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   62 | void removeNode(TreeMap * tree, TreeNode* node) {
      |                                                 ^
treemap.c:66:45: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   66 | void eraseTreeMap(TreeMap * tree, void* key){
      |                                             ^
treemap.c:78:49: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   78 | Pair * searchTreeMap(TreeMap * tree, void* key) {
      |                                                 ^
treemap.c:83:46: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   83 | Pair * upperBound(TreeMap * tree, void* key) {
      |                                              ^
treemap.c:87:37: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   87 | Pair * firstTreeMap(TreeMap * tree) {
      |                                     ^
treemap.c:91:36: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   91 | Pair * nextTreeMap(TreeMap * tree) {
      |                                    ^
test.c:6:34: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
    6 | char * _strdup(const char * str) {
      |                                  ^
test.c:13:1: error: parameter ‘test_id’ is initialized
   13 | int test_id = -1;
      | ^~~
test.c:16:14: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   16 | int success(){
      |              ^
test.c:21:24: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   21 | void err_msg(char* msg){
      |                        ^
test.c:28:23: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   28 | void ok_msg(char* msg){
      |                       ^
test.c:34:25: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   34 | void info_msg(char* msg){
      |                         ^
test.c:42:2: error: storage class specified for parameter ‘Palabra’
   42 | }Palabra;
      |  ^~~~~~~
test.c:44:1: error: expected declaration specifiers before ‘Palabra’
   44 | Palabra* creaPalabra(int id, char* word){
      | ^~~~~~~
test.c:52:43: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   52 | int lower_than_int(void* key1, void* key2){
      |                                           ^
test.c:58:26: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   58 | TreeMap* initializeTree(){
      |                          ^
test.c:76:19: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
   76 | int create_test1(){
      |                   ^
test.c:101:32: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  101 | int search_test1(TreeMap* tree){ //key se encuentra en raiz
      |                                ^
test.c:120:32: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  120 | int search_test2(TreeMap* tree){ //key en root->right
      |                                ^
test.c:139:32: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  139 | int search_test3(TreeMap* tree){ //key en root->right->left
      |                                ^
test.c:159:32: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  159 | int search_test4(TreeMap* tree){ //key no existe
      |                                ^
test.c:173:32: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  173 | int insert_test1(TreeMap* tree){//dato repetido
      |                                ^
test.c:187:19: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  187 | int insert_test2(){
      |                   ^
test.c:223:19: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  223 | int minimum_test(){
      |                   ^
test.c:262:18: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  262 | int erase_test1(){//nodo sin hijos
      |                  ^
test.c:276:18: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  276 | int erase_test2(){//nodo con un hijo
      |                  ^
test.c:297:18: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  297 | int erase_test3(){//nodo con dos hijos
      |                  ^
test.c:317:32: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  317 | int first_test1(TreeMap * tree){
      |                                ^
test.c:333:18: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  333 | int first_test2(){ //debes iterar
      |                  ^
test.c:351:17: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  351 | int next_test1(){ //caso1: current tiene hijo derecho
      |                 ^
test.c:376:17: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  376 | int next_test2(){ //caso1: current tiene hijo derecho
      |                 ^
test.c:405:17: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  405 | int next_test3(){ //caso2: current sin hijo derecho
      |                 ^
test.c:425:28: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  425 | int ub_test1(TreeMap* tree){ //el dato existe
      |                            ^
test.c:445:28: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  445 | int ub_test2(TreeMap* tree){
      |                            ^
test.c:466:28: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  466 | int ub_test3(TreeMap* tree){
      |                            ^
test.c:487:28: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  487 | int ub_test4(TreeMap* tree){
      |                            ^
test.c:503:36: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘{’ token
  503 | int main( int argc, char *argv[] ) {
      |                                    ^
In file included from test.c:4:
treemap.c:52:6: error: old-style parameter declarations in prototyped function definition
   52 | void insertTreeMap(TreeMap * tree, void* key, void * value)
      |      ^~~~~~~~~~~~~
test.c:607: error: expected ‘{’ at end of input
Compilation failed
73dfeb1
Fri 15 Sep 2023 12:12:58 AM UTC: 
 treemap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:79:5: error: ‘return’ with no value, in function returning non-void [-Werror=return-type]
   79 |     return ;
      |     ^~~~~~
treemap.c:78:8: note: declared here
   78 | Pair * searchTreeMap(TreeMap * tree, void* key) {
      |        ^~~~~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
76a3043
Fri 15 Sep 2023 12:13:43 AM UTC: 
 treemap.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:79:10: error: ‘aux’ undeclared (first use in this function)
   79 |   while (aux != NULL) {
      |          ^~~
treemap.c:79:10: note: each undeclared identifier is reported only once for each function it appears in
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
test.c:607: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
afda6bc
Fri 15 Sep 2023 12:13:53 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:79:10: error: ‘aux’ undeclared (first use in this function)
   79 |   while (aux != NULL) {
      |          ^~~
treemap.c:79:10: note: each undeclared identifier is reported only once for each function it appears in
treemap.c:80:26: error: expected ‘)’ before ‘key’
   80 |         if (is_equal(tree key, aux->pair->key)) {
      |                     ~    ^~~~
      |                          )
treemap.c:80:13: error: too few arguments to function ‘is_equal’
   80 |         if (is_equal(tree key, aux->pair->key)) {
      |             ^~~~~~~~
treemap.c:22:5: note: declared here
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |     ^~~~~~~~
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
test.c:607: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
b247486
Fri 15 Sep 2023 12:13:58 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:79:10: error: ‘aux’ undeclared (first use in this function)
   79 |   while (aux != NULL) {
      |          ^~~
treemap.c:79:10: note: each undeclared identifier is reported only once for each function it appears in
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
test.c:607: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
192527c
Fri 15 Sep 2023 12:14:25 AM UTC: 
 treemap.c | 1 -
 1 file changed, 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:79:10: error: ‘aux’ undeclared (first use in this function)
   79 |   while (aux != NULL) {
      |          ^~~
treemap.c:79:10: note: each undeclared identifier is reported only once for each function it appears in
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
test.c:607: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
b4e0af3
Fri 15 Sep 2023 12:14:37 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:79:10: error: ‘aux’ undeclared (first use in this function)
   79 |   while (aux != NULL) {
      |          ^~~
treemap.c:79:10: note: each undeclared identifier is reported only once for each function it appears in
treemap.c:83:2: error: unknown type name ‘tytryhrthtyjtyjyjyuuiuiu’
   83 | }tytryhrthtyjtyjyjyuuiuiu
      |  ^~~~~~~~~~~~~~~~~~~~~~~~
treemap.c:86:6: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘*’ token
   86 | Pair * upperBound(TreeMap * tree, void* key) {
      |      ^
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
test.c:607: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
05868c2
Fri 15 Sep 2023 12:15:05 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:79:10: error: ‘aux’ undeclared (first use in this function)
   79 |   while (aux != NULL) {
      |          ^~~
treemap.c:79:10: note: each undeclared identifier is reported only once for each function it appears in
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
test.c:607: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
406b090
Fri 15 Sep 2023 12:16:14 AM UTC: 
 treemap.c | 1 +
 1 file changed, 1 insertion(+)
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:79:10: error: ‘aux’ undeclared (first use in this function)
   79 |   while (aux != NULL) {
      |          ^~~
treemap.c:79:10: note: each undeclared identifier is reported only once for each function it appears in
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
In file included from test.c:4:
treemap.c:84:9: note: ‘-Wmisleading-indentation’ is disabled from this point onwards, since column-tracking was disabled due to the size of the code/headers
   84 |         else if (tree->lower_than(key, aux->pair->key)) {
      |         ^~~~
treemap.c:84:9: note: adding ‘-flarge-source-files’ will allow for more column-tracking support, at the expense of compilation time and memory
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
test.c:607: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
9b0914e
Fri 15 Sep 2023 12:17:32 AM UTC: 
 treemap.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:79:10: error: ‘aux’ undeclared (first use in this function)
   79 |   while (aux != NULL) {
      |          ^~~
treemap.c:79:10: note: each undeclared identifier is reported only once for each function it appears in
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
In file included from test.c:4:
treemap.c:84:9: note: ‘-Wmisleading-indentation’ is disabled from this point onwards, since column-tracking was disabled due to the size of the code/headers
   84 |         else if (tree->lower_than(key, aux->pair->key))
      |         ^~~~
treemap.c:84:9: note: adding ‘-flarge-source-files’ will allow for more column-tracking support, at the expense of compilation time and memory
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
test.c:607: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
69397cb
Fri 15 Sep 2023 12:18:14 AM UTC: 
 treemap.c | 9 +++++++++
 1 file changed, 9 insertions(+)
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:79:10: error: ‘aux’ undeclared (first use in this function)
   79 |   while (aux != NULL) {
      |          ^~~
treemap.c:79:10: note: each undeclared identifier is reported only once for each function it appears in
Compilation failed
02ec125
Fri 15 Sep 2023 12:21:12 AM UTC: 
 treemap.c | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:97:1: error: expected ‘;’ before ‘}’ token
   97 | }
      | ^
Compilation failed
a9e7c8a
Fri 15 Sep 2023 12:21:21 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  11|6
total_score: 15/70
12b95e5
Fri 15 Sep 2023 12:30:14 AM UTC: 
 treemap.c | 3 +++
 1 file changed, 3 insertions(+)
In file included from test.c:4:
treemap.c: In function ‘insertTreeMap’:
treemap.c:54:13: error: unused variable ‘parent’ [-Werror=unused-variable]
   54 |   TreeNode* parent = NULL;
      |             ^~~~~~
treemap.c:53:13: error: unused variable ‘node’ [-Werror=unused-variable]
   53 |   TreeNode* node = tree->root;
      |             ^~~~
cc1: all warnings being treated as errors
Compilation failed
4d1c9a3
Fri 15 Sep 2023 12:31:02 AM UTC: 
 treemap.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)
In file included from test.c:4:
treemap.c: In function ‘insertTreeMap’:
treemap.c:63:9: error: expected expression before ‘}’ token
   63 |         }
      |         ^
treemap.c:63:9: error: ‘return’ with a value, in function returning void [-Werror=return-type]
treemap.c:52:6: note: declared here
   52 | void insertTreeMap(TreeMap * tree, void* key, void * value) {
      |      ^~~~~~~~~~~~~
treemap.c:70:29: error: expected ‘;’ before ‘}’ token
   70 |         tree->root = newNode
      |                             ^
      |                             ;
   71 |     } else if (tree->lower_than(key, parent->pair->key)) {
      |     ~                        
treemap.c: At top level:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
898e7a2
Fri 15 Sep 2023 12:31:27 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘insertTreeMap’:
treemap.c:63:9: error: expected expression before ‘}’ token
   63 |         }
      |         ^
treemap.c:63:9: error: ‘return’ with a value, in function returning void [-Werror=return-type]
treemap.c:52:6: note: declared here
   52 | void insertTreeMap(TreeMap * tree, void* key, void * value) {
      |      ^~~~~~~~~~~~~
treemap.c:70:29: error: expected ‘;’ before ‘}’ token
   70 |         tree->root = newNode
      |                             ^
      |                             ;
   71 |     } else if (tree->lower_than(key, parent->pair->key)) {
      |     ~                        
treemap.c:76:28: error: expected ‘;’ before ‘}’ token
   76 |     tree->current = newNode
      |                            ^
      |                            ;
   77 | }
      | ~                           
treemap.c: At top level:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
491ecab
Fri 15 Sep 2023 12:31:50 AM UTC: 
 treemap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘insertTreeMap’:
treemap.c:70:29: error: expected ‘;’ before ‘}’ token
   70 |         tree->root = newNode
      |                             ^
      |                             ;
   71 |     } else if (tree->lower_than(key, parent->pair->key)) {
      |     ~                        
treemap.c: At top level:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
Compilation failed
10c2167
Fri 15 Sep 2023 12:33:04 AM UTC: 
 treemap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
Compilation failed
fd93ee1
Fri 15 Sep 2023 12:33:17 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘insertTreeMap’:
treemap.c:67:5: error: expected expression before ‘/’ token
   67 |     /newNode->parent = parent;
      |     ^
treemap.c: At top level:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
Compilation failed
1965166
Fri 15 Sep 2023 12:33:29 AM UTC: 
 treemap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘insertTreeMap’:
treemap.c:66:5: error: expected expression before ‘TreeNode’
   66 |     TreeNode* newNode = createTreeNode(key, value);
      |     ^~~~~~~~
treemap.c:67:5: error: ‘newNode’ undeclared (first use in this function); did you mean ‘node’?
   67 |     newNode->parent = parent;
      |     ^~~~~~~
      |     node
treemap.c:67:5: note: each undeclared identifier is reported only once for each function it appears in
treemap.c: At top level:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
Compilation failed
9c45c04
Fri 15 Sep 2023 12:33:37 AM UTC: 
 treemap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘insertTreeMap’:
treemap.c:55:19: error: ‘NUL’ undeclared (first use in this function); did you mean ‘NULL’?
   55 |    while (node != NUL) {
      |                   ^~~
      |                   NULL
treemap.c:55:19: note: each undeclared identifier is reported only once for each function it appears in
treemap.c: At top level:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
Compilation failed
50ed98a
Fri 15 Sep 2023 12:33:46 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘insertTreeMap’:
treemap.c:55:19: error: ‘NULLL’ undeclared (first use in this function); did you mean ‘NULL’?
   55 |    while (node != NULLL) {
      |                   ^~~~~
      |                   NULL
treemap.c:55:19: note: each undeclared identifier is reported only once for each function it appears in
treemap.c: At top level:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
Compilation failed
11bdef6
Fri 15 Sep 2023 12:33:54 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
Compilation failed
65a16bf
Fri 15 Sep 2023 12:34:08 AM UTC: 
 treemap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
treemap.c:52:1: error: unknown type name ‘voi’; did you mean ‘void’?
   52 | voi insertTreeMap(TreeMap * tree, void* key, void * value) {
      | ^~~
      | void
treemap.c:52:5: error: conflicting types for ‘insertTreeMap’; have ‘int(TreeMap *, void *, void *)’
   52 | voi insertTreeMap(TreeMap * tree, void* key, void * value) {
      |     ^~~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:13:6: note: previous declaration of ‘insertTreeMap’ with type ‘void(TreeMap *, void *, void *)’
   13 | void insertTreeMap(TreeMap * tree, void* key, void * value);
      |      ^~~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘insertTreeMap’:
treemap.c:62:13: error: ‘return’ with no value, in function returning non-void [-Werror=return-type]
   62 |             return;
      |             ^~~~~~
treemap.c:52:5: note: declared here
   52 | voi insertTreeMap(TreeMap * tree, void* key, void * value) {
      |     ^~~~~~~~~~~~~
treemap.c: At top level:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
225665e
Fri 15 Sep 2023 12:34:16 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:52:1: error: unknown type name ‘voiD’; did you mean ‘void’?
   52 | voiD insertTreeMap(TreeMap * tree, void* key, void * value) {
      | ^~~~
      | void
treemap.c:52:6: error: conflicting types for ‘insertTreeMap’; have ‘int(TreeMap *, void *, void *)’
   52 | voiD insertTreeMap(TreeMap * tree, void* key, void * value) {
      |      ^~~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:13:6: note: previous declaration of ‘insertTreeMap’ with type ‘void(TreeMap *, void *, void *)’
   13 | void insertTreeMap(TreeMap * tree, void* key, void * value);
      |      ^~~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘insertTreeMap’:
treemap.c:62:13: error: ‘return’ with no value, in function returning non-void [-Werror=return-type]
   62 |             return;
      |             ^~~~~~
treemap.c:52:6: note: declared here
   52 | voiD insertTreeMap(TreeMap * tree, void* key, void * value) {
      |      ^~~~~~~~~~~~~
treemap.c: At top level:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
03ed1bf
Fri 15 Sep 2023 12:34:24 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:80:1: error: expected identifier or ‘(’ before ‘}’ token
   80 | }
      | ^
Compilation failed
a1a0cbf
Fri 15 Sep 2023 12:34:37 AM UTC: 
 treemap.c | 2 --
 1 file changed, 2 deletions(-)
 tests:  13|5
total_score: 25/70
ef756a7
Fri 15 Sep 2023 12:38:07 AM UTC: 
 treemap.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)
 tests:  13|5
total_score: 25/70
71ad560
Fri 15 Sep 2023 12:42:06 AM UTC: 
 treemap.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)
test.c: In function ‘minimum’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
2728f80
Fri 15 Sep 2023 12:42:17 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:90:2: error: expected identifier or ‘(’ before ‘.’ token
   90 | }.
      |  ^
treemap.c: In function ‘eraseTreeMap’:
treemap.c:101:5: error: implicit declaration of function ‘removeNode’; did you mean ‘remove’? [-Werror=implicit-function-declaration]
  101 |     removeNode(tree, node);
      |     ^~~~~~~~~~
      |     remove
cc1: all warnings being treated as errors
Compilation failed
117b01c
Fri 15 Sep 2023 12:42:29 AM UTC: 
 treemap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
 tests:  13|5
total_score: 25/70
a8c8cff
Fri 15 Sep 2023 12:42:41 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘minimum’:
treemap.c:89:12: error: ‘X’ undeclared (first use in this function)
   89 |     return X;
      |            ^
treemap.c:89:12: note: each undeclared identifier is reported only once for each function it appears in
treemap.c:90:1: error: control reaches end of non-void function [-Werror=return-type]
   90 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
d8602bd
Fri 15 Sep 2023 12:42:47 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  15|4
total_score: 25/70
4adf5b0
Fri 15 Sep 2023 12:46:48 AM UTC: 
 treemap.c | 38 ++++++++++++++++++++++++++++++++++++--
 1 file changed, 36 insertions(+), 2 deletions(-)
In file included from test.c:4:
treemap.c:92:1: error: unknown type name ‘vvoid’; did you mean ‘void’?
   92 | vvoid removeNode(TreeMap * tree, TreeNode* node) {
      | ^~~~~
      | void
treemap.c: In function ‘removeNode’:
treemap.c:121:3: error: expected ‘}’ before ‘else’
  121 |   else {
      |   ^~~~
treemap.c:122:25: error: called object ‘minimum’ is not a function or function pointer
  122 |     TreeNode* minimum = minimum(node->right);
      |                         ^~~~~~~
treemap.c:122:15: note: declared here
  122 |     TreeNode* minimum = minimum(node->right);
      |               ^~~~~~~
treemap.c:123:9: error: ‘TreeNode’ has no member named ‘key’
  123 |     node->key = minimum->key;
      |         ^~
treemap.c:123:24: error: ‘TreeNode’ has no member named ‘key’
  123 |     node->key = minimum->key;
      |                        ^~
treemap.c:124:9: error: ‘TreeNode’ has no member named ‘value’
  124 |     node->value = minimum->value;
      |         ^~
treemap.c:124:26: error: ‘TreeNode’ has no member named ‘value’
  124 |     node->value = minimum->value;
      |                          ^~
treemap.c:127:1: error: control reaches end of non-void function [-Werror=return-type]
  127 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
f265630
Fri 15 Sep 2023 12:47:14 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:92:1: error: unknown type name ‘vvoid’; did you mean ‘void’?
   92 | vvoid removeNode(TreeMap * tree, TreeNode* node) {
      | ^~~~~
      | void
treemap.c: In function ‘removeNode’:
treemap.c:122:25: error: called object ‘minimum’ is not a function or function pointer
  122 |     TreeNode* minimum = minimum(node->right);
      |                         ^~~~~~~
treemap.c:122:15: note: declared here
  122 |     TreeNode* minimum = minimum(node->right);
      |               ^~~~~~~
treemap.c:123:9: error: ‘TreeNode’ has no member named ‘key’
  123 |     node->key = minimum->key;
      |         ^~
treemap.c:123:24: error: ‘TreeNode’ has no member named ‘key’
  123 |     node->key = minimum->key;
      |                        ^~
treemap.c:124:9: error: ‘TreeNode’ has no member named ‘value’
  124 |     node->value = minimum->value;
      |         ^~
treemap.c:124:26: error: ‘TreeNode’ has no member named ‘value’
  124 |     node->value = minimum->value;
      |                          ^~
treemap.c:127:1: error: control reaches end of non-void function [-Werror=return-type]
  127 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
89b928e
Fri 15 Sep 2023 12:47:20 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘removeNode’:
treemap.c:122:25: error: called object ‘minimum’ is not a function or function pointer
  122 |     TreeNode* minimum = minimum(node->right);
      |                         ^~~~~~~
treemap.c:122:15: note: declared here
  122 |     TreeNode* minimum = minimum(node->right);
      |               ^~~~~~~
treemap.c:123:9: error: ‘TreeNode’ has no member named ‘key’
  123 |     node->key = minimum->key;
      |         ^~
treemap.c:123:24: error: ‘TreeNode’ has no member named ‘key’
  123 |     node->key = minimum->key;
      |                        ^~
treemap.c:124:9: error: ‘TreeNode’ has no member named ‘value’
  124 |     node->value = minimum->value;
      |         ^~
treemap.c:124:26: error: ‘TreeNode’ has no member named ‘value’
  124 |     node->value = minimum->value;
      |                          ^~
Compilation failed
3729013
Fri 15 Sep 2023 01:08:56 AM UTC: 
 treemap.c | 44 ++++++++++++++++++++------------------------
 1 file changed, 20 insertions(+), 24 deletions(-)
In file included from test.c:4:
treemap.c:123:1: error: expected identifier or ‘(’ before ‘}’ token
  123 | }
      | ^
Compilation failed
5a9e66a
Fri 15 Sep 2023 01:09:12 AM UTC: 
 treemap.c | 2 --
 1 file changed, 2 deletions(-)
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
df0fb11
Fri 15 Sep 2023 01:09:28 AM UTC: 
 treemap.c | 1 +
 1 file changed, 1 insertion(+)
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
1f78ce6
Fri 15 Sep 2023 01:09:42 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
1ae0dba
Fri 15 Sep 2023 01:10:51 AM UTC: 
 treemap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘removeNode’:
treemap.c:120:10: error: ‘nodp’ undeclared (first use in this function); did you mean ‘node’?
  120 |     free(nodp);
      |          ^~~~
      |          node
treemap.c:120:10: note: each undeclared identifier is reported only once for each function it appears in
Compilation failed
e0db0fc
Fri 15 Sep 2023 01:11:00 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘removeNode’:
treemap.c:120:10: error: ‘nodoo’ undeclared (first use in this function)
  120 |     free(nodoo);
      |          ^~~~~
treemap.c:120:10: note: each undeclared identifier is reported only once for each function it appears in
Compilation failed
e0e9955
Fri 15 Sep 2023 01:11:13 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c: In function ‘removeNode’:
treemap.c:120:10: error: ‘nodo’ undeclared (first use in this function); did you mean ‘node’?
  120 |     free(nodo);
      |          ^~~~
      |          node
treemap.c:120:10: note: each undeclared identifier is reported only once for each function it appears in
Compilation failed
4b8388e
Fri 15 Sep 2023 01:11:24 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
6ca34d4
Fri 15 Sep 2023 01:21:15 AM UTC: 
 treemap.c | 34 +++++++++++++++++++++++++++++++---
 1 file changed, 31 insertions(+), 3 deletions(-)
In file included from test.c:4:
treemap.c:162:11: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘*’ token
  162 | Pair Pair * firstTreeMap(TreeMap * tree) {
      |           ^
Compilation failed
d688929
Fri 15 Sep 2023 01:21:42 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:162:1: error: unknown type name ‘Pai’; did you mean ‘Pair’?
  162 | Pai * firstTreeMap(TreeMap * tree) {
      | ^~~
      | Pair
treemap.c:162:7: error: conflicting types for ‘firstTreeMap’; have ‘int *(TreeMap *)’
  162 | Pai * firstTreeMap(TreeMap * tree) {
      |       ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:21:8: note: previous declaration of ‘firstTreeMap’ with type ‘Pair *(TreeMap *)’
   21 | Pair * firstTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘firstTreeMap’:
treemap.c:173:16: error: returning ‘Pair *’ from a function with incompatible return type ‘int *’ [-Werror=incompatible-pointer-types]
  173 |     return node->pair;
      |            ~~~~^~~~~~
test.c: In function ‘first_test1’:
test.c:318:15: error: initialization of ‘Pair *’ from incompatible pointer type ‘int *’ [-Werror=incompatible-pointer-types]
  318 |     Pair* aux=firstTreeMap(tree);
      |               ^~~~~~~~~~~~
test.c: In function ‘first_test2’:
test.c:340:16: error: initialization of ‘Pair *’ from incompatible pointer type ‘int *’ [-Werror=incompatible-pointer-types]
  340 |     Pair* pair=firstTreeMap(tree);
      |                ^~~~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
b6a118e
Fri 15 Sep 2023 01:22:06 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
d9cf4da
Fri 15 Sep 2023 01:26:32 AM UTC: 
 treemap.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
a9f5f85
Fri 15 Sep 2023 01:28:33 AM UTC: 
 treemap.c | 30 ------------------------------
 1 file changed, 30 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘eraseTreeMap’:
treemap.c:100:5: error: implicit declaration of function ‘removeNode’; did you mean ‘remove’? [-Werror=implicit-function-declaration]
  100 |     removeNode(tree, node);
      |     ^~~~~~~~~~
      |     remove
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
0920061
Fri 15 Sep 2023 01:29:23 AM UTC: 
 treemap.c | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
0c211ee
Fri 15 Sep 2023 01:30:09 AM UTC: 
 treemap.c | 29 -----------------------------
 1 file changed, 29 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘eraseTreeMap’:
treemap.c:100:5: error: implicit declaration of function ‘removeNode’; did you mean ‘remove’? [-Werror=implicit-function-declaration]
  100 |     removeNode(tree, node);
      |     ^~~~~~~~~~
      |     remove
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
edabb11
Fri 15 Sep 2023 01:30:45 AM UTC: 
 treemap.c | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
079c483
Fri 15 Sep 2023 01:31:47 AM UTC: 
 treemap.c | 135 +++-----------------------------------------------------------
 1 file changed, 6 insertions(+), 129 deletions(-)
 tests:  1|8
total_score: 0/70
da10d70
Fri 15 Sep 2023 01:32:29 AM UTC: 
 treemap.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)
 tests:  4|7
total_score: 5/70
b620269
Fri 15 Sep 2023 01:33:07 AM UTC: 
 treemap.c | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)
 tests:  11|6
total_score: 15/70
494beb1
Fri 15 Sep 2023 01:33:35 AM UTC: 
 treemap.c | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)
 tests:  13|5
total_score: 25/70
ea84fb0
Fri 15 Sep 2023 01:35:15 AM UTC: 
 treemap.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)
 tests:  15|4
total_score: 25/70
dc24690
Fri 15 Sep 2023 01:35:59 AM UTC: 
 treemap.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)
 tests:  0|0
3a60402
Fri 15 Sep 2023 01:36:18 AM UTC: 
 treemap.c | 27 ---------------------------
 1 file changed, 27 deletions(-)
 tests:  15|4
total_score: 25/70
5bcb6fc
Fri 15 Sep 2023 01:36:37 AM UTC: 
 treemap.c | 32 ++++++++++++++++++++++++++++++--
 1 file changed, 30 insertions(+), 2 deletions(-)
 tests:  22|2
total_score: 45/70
1685f2a
Fri 15 Sep 2023 01:37:13 AM UTC: 
 treemap.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
52040c5
Fri 15 Sep 2023 01:37:17 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
dd1f50e
Fri 15 Sep 2023 01:37:20 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
1a8697a
Fri 15 Sep 2023 01:37:23 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
18ba6f9
Fri 15 Sep 2023 01:37:28 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
7d61130
Fri 15 Sep 2023 01:37:36 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
test.c:606:1: error: expected declaration or statement at end of input
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
2afb2eb
Fri 15 Sep 2023 01:37:39 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
test.c:606:1: error: expected declaration or statement at end of input
test.c:606:1: error: expected declaration or statement at end of input
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
94040ee
Fri 15 Sep 2023 01:37:43 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
test.c:606:1: error: expected declaration or statement at end of input
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
63e191c
Fri 15 Sep 2023 01:37:46 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
test.c:606:1: error: expected declaration or statement at end of input
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
61ebb75
Fri 15 Sep 2023 01:37:49 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
test.c: In function ‘upperBound’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
c2830fc
Fri 15 Sep 2023 01:37:58 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  26|1
total_score: 55/70
13ecb9b
Fri 15 Sep 2023 01:39:42 AM UTC: 
 treemap.c | 28 +++++++++++++++++++++++++++-
 1 file changed, 27 insertions(+), 1 deletion(-)
 tests:  0|0
d47f4cd
Fri 15 Sep 2023 01:41:14 AM UTC: 
 treemap.c | 58 ++++++++++++++++++++++++++++++++++++++++------------------
 1 file changed, 40 insertions(+), 18 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘removeNode’:
treemap.c:147:25: error: called object ‘minimum’ is not a function or function pointer
  147 |     TreeNode* minimum = minimum(node->right);
      |                         ^~~~~~~
treemap.c:147:15: note: declared here
  147 |     TreeNode* minimum = minimum(node->right);
      |               ^~~~~~~
treemap.c:149:9: error: ‘TreeNode’ has no member named ‘key’
  149 |     node->key = minimum->key;
      |         ^~
treemap.c:149:24: error: ‘TreeNode’ has no member named ‘key’
  149 |     node->key = minimum->key;
      |                        ^~
treemap.c:150:9: error: ‘TreeNode’ has no member named ‘value’
  150 |     node->value = minimum->value;
      |         ^~
treemap.c:150:26: error: ‘TreeNode’ has no member named ‘value’
  150 |     node->value = minimum->value;
      |                          ^~
Compilation failed
16d8cd2
Fri 15 Sep 2023 01:41:55 AM UTC: 
 treemap.c | 53 +----------------------------------------------------
 1 file changed, 1 insertion(+), 52 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘eraseTreeMap’:
treemap.c:112:5: error: implicit declaration of function ‘removeNode’; did you mean ‘remove’? [-Werror=implicit-function-declaration]
  112 |     removeNode(tree, node);
      |     ^~~~~~~~~~
      |     remove
cc1: all warnings being treated as errors
Compilation failed
91c2941
Fri 15 Sep 2023 01:47:12 AM UTC: 
 treemap.c | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)
In file included from test.c:4:
treemap.c: In function ‘removeNode’:
treemap.c:126:13: error: ‘TreeNode’ has no member named ‘key’
  126 |         node->key = temp->key;
      |             ^~
treemap.c:126:25: error: ‘TreeNode’ has no member named ‘key’
  126 |         node->key = temp->key;
      |                         ^~
treemap.c:127:13: error: ‘TreeNode’ has no member named ‘value’
  127 |         node->value = temp->value;
      |             ^~
treemap.c:127:27: error: ‘TreeNode’ has no member named ‘value’
  127 |         node->value = temp->value;
      |                           ^~
treemap.c: At top level:
treemap.c:132:11: error: redefinition of ‘minimum’
  132 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
Compilation failed
e069458
Fri 15 Sep 2023 01:47:53 AM UTC: 
 treemap.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘removeNode’:
treemap.c:126:13: error: ‘TreeNode’ has no member named ‘key’
  126 |         node->key = temp->key;
      |             ^~
treemap.c:126:25: error: ‘TreeNode’ has no member named ‘key’
  126 |         node->key = temp->key;
      |                         ^~
treemap.c:127:13: error: ‘TreeNode’ has no member named ‘value’
  127 |         node->value = temp->value;
      |             ^~
treemap.c:127:27: error: ‘TreeNode’ has no member named ‘value’
  127 |         node->value = temp->value;
      |                           ^~
treemap.c: At top level:
treemap.c:132:12: error: redefinition of ‘minimum’
  132 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
Compilation failed
7e90590
Fri 15 Sep 2023 03:19:41 AM UTC: 
 treemap.c | 10 ----------
 1 file changed, 10 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘removeNode’:
treemap.c:126:13: error: ‘TreeNode’ has no member named ‘key’
  126 |         node->key = temp->key;
      |             ^~
treemap.c:126:25: error: ‘TreeNode’ has no member named ‘key’
  126 |         node->key = temp->key;
      |                         ^~
treemap.c:127:13: error: ‘TreeNode’ has no member named ‘value’
  127 |         node->value = temp->value;
      |             ^~
treemap.c:127:27: error: ‘TreeNode’ has no member named ‘value’
  127 |         node->value = temp->value;
      |                           ^~
Compilation failed
6abed4a
Fri 15 Sep 2023 03:23:54 AM UTC: 
 treemap.c | 9 ++-------
 1 file changed, 2 insertions(+), 7 deletions(-)
 tests:  26|1
total_score: 55/70
1a4acfd
Fri 15 Sep 2023 03:26:22 AM UTC: 
 treemap.c | 32 +++++++++++++++++++-------------
 1 file changed, 19 insertions(+), 13 deletions(-)
 tests:  0|0
d50ee62
Fri 15 Sep 2023 03:29:20 AM UTC: 
 treemap.c | 29 -----------------------------
 1 file changed, 29 deletions(-)
In file included from test.c:4:
treemap.c: In function ‘eraseTreeMap’:
treemap.c:112:5: error: implicit declaration of function ‘removeNode’; did you mean ‘remove’? [-Werror=implicit-function-declaration]
  112 |     removeNode(tree, node);
      |     ^~~~~~~~~~
      |     remove
cc1: all warnings being treated as errors
Compilation failed
4c76a30
Fri 15 Sep 2023 03:31:05 AM UTC: 
 treemap.c | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)
 tests:  0|0
0bcb036
Fri 15 Sep 2023 03:33:39 AM UTC: 
 treemap.c | 9 +++++++++
 1 file changed, 9 insertions(+)
 tests:  0|0
b68d14d
Fri 15 Sep 2023 03:34:41 AM UTC: 
 treemap.c | 36 ------------------------------------
 1 file changed, 36 deletions(-)
 tests:  26|1
total_score: 55/70
220f1e7
Fri 15 Sep 2023 03:38:18 AM UTC: 
 treemap.c | 65 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 65 insertions(+)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c: In function ‘eraseTreeMap’:
treemap.c:178:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  178 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:179:26: error: ‘TreeMap’ has no member named ‘current’
  179 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: In function ‘searchTreeMap’:
treemap.c:190:36: error: ‘TreeNode’ has no member named ‘pair’
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:190:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:191:17: error: ‘TreeMap’ has no member named ‘current’
  191 |             tree->current = aux;
      |                 ^~
treemap.c:192:23: error: ‘TreeNode’ has no member named ‘pair’
  192 |             return aux->pair;
      |                       ^~
treemap.c:193:24: error: ‘TreeMap’ has no member named ‘lower_than’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:193:45: error: ‘TreeNode’ has no member named ‘pair’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: In function ‘upperBound’:
treemap.c:210:17: error: ‘TreeMap’ has no member named ‘lower_than’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:210:39: error: ‘TreeNode’ has no member named ‘pair’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:213:24: error: ‘TreeMap’ has no member named ‘lower_than’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:213:41: error: ‘TreeNode’ has no member named ‘pair’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:216:24: error: ‘TreeNode’ has no member named ‘pair’
  216 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:220:39: error: ‘TreeNode’ has no member named ‘pair’
  220 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: In function ‘firstTreeMap’:
treemap.c:233:9: error: ‘TreeMap’ has no member named ‘current’
  233 |     tree->current = node;
      |         ^~
treemap.c:234:16: error: ‘TreeNode’ has no member named ‘pair’
  234 |     return node->pair;
      |                ^~
treemap.c: In function ‘nextTreeMap’:
treemap.c:238:29: error: ‘TreeMap’ has no member named ‘current’
  238 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:242:26: error: ‘TreeMap’ has no member named ‘current’
  242 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:255:9: error: ‘TreeMap’ has no member named ‘current’
  255 |     tree->current = node;
      |         ^~
treemap.c:256:33: error: ‘TreeNode’ has no member named ‘pair’
  256 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
db48fa6
Fri 15 Sep 2023 03:38:25 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c: In function ‘eraseTreeMap’:
treemap.c:178:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  178 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:179:26: error: ‘TreeMap’ has no member named ‘current’
  179 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: In function ‘searchTreeMap’:
treemap.c:190:36: error: ‘TreeNode’ has no member named ‘pair’
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:190:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:191:17: error: ‘TreeMap’ has no member named ‘current’
  191 |             tree->current = aux;
      |                 ^~
treemap.c:192:23: error: ‘TreeNode’ has no member named ‘pair’
  192 |             return aux->pair;
      |                       ^~
treemap.c:193:24: error: ‘TreeMap’ has no member named ‘lower_than’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:193:45: error: ‘TreeNode’ has no member named ‘pair’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: In function ‘upperBound’:
treemap.c:210:17: error: ‘TreeMap’ has no member named ‘lower_than’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:210:39: error: ‘TreeNode’ has no member named ‘pair’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:213:24: error: ‘TreeMap’ has no member named ‘lower_than’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:213:41: error: ‘TreeNode’ has no member named ‘pair’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:216:24: error: ‘TreeNode’ has no member named ‘pair’
  216 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:220:39: error: ‘TreeNode’ has no member named ‘pair’
  220 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: In function ‘firstTreeMap’:
treemap.c:233:9: error: ‘TreeMap’ has no member named ‘current’
  233 |     tree->current = node;
      |         ^~
treemap.c:234:16: error: ‘TreeNode’ has no member named ‘pair’
  234 |     return node->pair;
      |                ^~
treemap.c: In function ‘nextTreeMap’:
treemap.c:238:29: error: ‘TreeMap’ has no member named ‘current’
  238 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:242:26: error: ‘TreeMap’ has no member named ‘current’
  242 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:255:9: error: ‘TreeMap’ has no member named ‘current’
  255 |     tree->current = node;
      |         ^~
treemap.c:256:33: error: ‘TreeNode’ has no member named ‘pair’
  256 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
971424f
Fri 15 Sep 2023 03:38:28 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c: In function ‘eraseTreeMap’:
treemap.c:178:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  178 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:179:26: error: ‘TreeMap’ has no member named ‘current’
  179 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: In function ‘searchTreeMap’:
treemap.c:190:36: error: ‘TreeNode’ has no member named ‘pair’
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:190:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:191:17: error: ‘TreeMap’ has no member named ‘current’
  191 |             tree->current = aux;
      |                 ^~
treemap.c:192:23: error: ‘TreeNode’ has no member named ‘pair’
  192 |             return aux->pair;
      |                       ^~
treemap.c:193:24: error: ‘TreeMap’ has no member named ‘lower_than’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:193:45: error: ‘TreeNode’ has no member named ‘pair’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: In function ‘upperBound’:
treemap.c:210:17: error: ‘TreeMap’ has no member named ‘lower_than’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:210:39: error: ‘TreeNode’ has no member named ‘pair’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:213:24: error: ‘TreeMap’ has no member named ‘lower_than’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:213:41: error: ‘TreeNode’ has no member named ‘pair’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:216:24: error: ‘TreeNode’ has no member named ‘pair’
  216 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:220:39: error: ‘TreeNode’ has no member named ‘pair’
  220 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: In function ‘firstTreeMap’:
treemap.c:233:9: error: ‘TreeMap’ has no member named ‘current’
  233 |     tree->current = node;
      |         ^~
treemap.c:234:16: error: ‘TreeNode’ has no member named ‘pair’
  234 |     return node->pair;
      |                ^~
treemap.c: In function ‘nextTreeMap’:
treemap.c:238:29: error: ‘TreeMap’ has no member named ‘current’
  238 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:242:26: error: ‘TreeMap’ has no member named ‘current’
  242 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:255:9: error: ‘TreeMap’ has no member named ‘current’
  255 |     tree->current = node;
      |         ^~
treemap.c:256:33: error: ‘TreeNode’ has no member named ‘pair’
  256 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
d1b874d
Fri 15 Sep 2023 03:38:32 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c: In function ‘eraseTreeMap’:
treemap.c:178:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  178 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:179:26: error: ‘TreeMap’ has no member named ‘current’
  179 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: In function ‘searchTreeMap’:
treemap.c:190:36: error: ‘TreeNode’ has no member named ‘pair’
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:190:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:191:17: error: ‘TreeMap’ has no member named ‘current’
  191 |             tree->current = aux;
      |                 ^~
treemap.c:192:23: error: ‘TreeNode’ has no member named ‘pair’
  192 |             return aux->pair;
      |                       ^~
treemap.c:193:24: error: ‘TreeMap’ has no member named ‘lower_than’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:193:45: error: ‘TreeNode’ has no member named ‘pair’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: In function ‘upperBound’:
treemap.c:210:17: error: ‘TreeMap’ has no member named ‘lower_than’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:210:39: error: ‘TreeNode’ has no member named ‘pair’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:213:24: error: ‘TreeMap’ has no member named ‘lower_than’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:213:41: error: ‘TreeNode’ has no member named ‘pair’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:216:24: error: ‘TreeNode’ has no member named ‘pair’
  216 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:220:39: error: ‘TreeNode’ has no member named ‘pair’
  220 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: In function ‘firstTreeMap’:
treemap.c:233:9: error: ‘TreeMap’ has no member named ‘current’
  233 |     tree->current = node;
      |         ^~
treemap.c:234:16: error: ‘TreeNode’ has no member named ‘pair’
  234 |     return node->pair;
      |                ^~
treemap.c: In function ‘nextTreeMap’:
treemap.c:238:29: error: ‘TreeMap’ has no member named ‘current’
  238 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:242:26: error: ‘TreeMap’ has no member named ‘current’
  242 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:255:9: error: ‘TreeMap’ has no member named ‘current’
  255 |     tree->current = node;
      |         ^~
treemap.c:256:33: error: ‘TreeNode’ has no member named ‘pair’
  256 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
e01c065
Fri 15 Sep 2023 03:38:35 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c: In function ‘eraseTreeMap’:
treemap.c:178:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  178 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:179:26: error: ‘TreeMap’ has no member named ‘current’
  179 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: In function ‘searchTreeMap’:
treemap.c:190:36: error: ‘TreeNode’ has no member named ‘pair’
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:190:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:191:17: error: ‘TreeMap’ has no member named ‘current’
  191 |             tree->current = aux;
      |                 ^~
treemap.c:192:23: error: ‘TreeNode’ has no member named ‘pair’
  192 |             return aux->pair;
      |                       ^~
treemap.c:193:24: error: ‘TreeMap’ has no member named ‘lower_than’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:193:45: error: ‘TreeNode’ has no member named ‘pair’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: In function ‘upperBound’:
treemap.c:210:17: error: ‘TreeMap’ has no member named ‘lower_than’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:210:39: error: ‘TreeNode’ has no member named ‘pair’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:213:24: error: ‘TreeMap’ has no member named ‘lower_than’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:213:41: error: ‘TreeNode’ has no member named ‘pair’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:216:24: error: ‘TreeNode’ has no member named ‘pair’
  216 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:220:39: error: ‘TreeNode’ has no member named ‘pair’
  220 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: In function ‘firstTreeMap’:
treemap.c:233:9: error: ‘TreeMap’ has no member named ‘current’
  233 |     tree->current = node;
      |         ^~
treemap.c:234:16: error: ‘TreeNode’ has no member named ‘pair’
  234 |     return node->pair;
      |                ^~
treemap.c: In function ‘nextTreeMap’:
treemap.c:238:29: error: ‘TreeMap’ has no member named ‘current’
  238 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:242:26: error: ‘TreeMap’ has no member named ‘current’
  242 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:255:9: error: ‘TreeMap’ has no member named ‘current’
  255 |     tree->current = node;
      |         ^~
treemap.c:256:33: error: ‘TreeNode’ has no member named ‘pair’
  256 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
3d5ab3b
Fri 15 Sep 2023 03:38:38 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c: In function ‘eraseTreeMap’:
treemap.c:178:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  178 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:179:26: error: ‘TreeMap’ has no member named ‘current’
  179 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: In function ‘searchTreeMap’:
treemap.c:190:36: error: ‘TreeNode’ has no member named ‘pair’
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:190:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:191:17: error: ‘TreeMap’ has no member named ‘current’
  191 |             tree->current = aux;
      |                 ^~
treemap.c:192:23: error: ‘TreeNode’ has no member named ‘pair’
  192 |             return aux->pair;
      |                       ^~
treemap.c:193:24: error: ‘TreeMap’ has no member named ‘lower_than’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:193:45: error: ‘TreeNode’ has no member named ‘pair’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: In function ‘upperBound’:
treemap.c:210:17: error: ‘TreeMap’ has no member named ‘lower_than’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:210:39: error: ‘TreeNode’ has no member named ‘pair’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:213:24: error: ‘TreeMap’ has no member named ‘lower_than’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:213:41: error: ‘TreeNode’ has no member named ‘pair’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:216:24: error: ‘TreeNode’ has no member named ‘pair’
  216 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:220:39: error: ‘TreeNode’ has no member named ‘pair’
  220 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: In function ‘firstTreeMap’:
treemap.c:233:9: error: ‘TreeMap’ has no member named ‘current’
  233 |     tree->current = node;
      |         ^~
treemap.c:234:16: error: ‘TreeNode’ has no member named ‘pair’
  234 |     return node->pair;
      |                ^~
treemap.c: In function ‘nextTreeMap’:
treemap.c:238:29: error: ‘TreeMap’ has no member named ‘current’
  238 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:242:26: error: ‘TreeMap’ has no member named ‘current’
  242 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:255:9: error: ‘TreeMap’ has no member named ‘current’
  255 |     tree->current = node;
      |         ^~
treemap.c:256:33: error: ‘TreeNode’ has no member named ‘pair’
  256 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
f1952fb
Fri 15 Sep 2023 03:38:42 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c: In function ‘eraseTreeMap’:
treemap.c:178:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  178 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:179:26: error: ‘TreeMap’ has no member named ‘current’
  179 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: In function ‘searchTreeMap’:
treemap.c:190:36: error: ‘TreeNode’ has no member named ‘pair’
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:190:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:191:17: error: ‘TreeMap’ has no member named ‘current’
  191 |             tree->current = aux;
      |                 ^~
treemap.c:192:23: error: ‘TreeNode’ has no member named ‘pair’
  192 |             return aux->pair;
      |                       ^~
treemap.c:193:24: error: ‘TreeMap’ has no member named ‘lower_than’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:193:45: error: ‘TreeNode’ has no member named ‘pair’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: In function ‘upperBound’:
treemap.c:210:17: error: ‘TreeMap’ has no member named ‘lower_than’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:210:39: error: ‘TreeNode’ has no member named ‘pair’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:213:24: error: ‘TreeMap’ has no member named ‘lower_than’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:213:41: error: ‘TreeNode’ has no member named ‘pair’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:216:24: error: ‘TreeNode’ has no member named ‘pair’
  216 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:220:39: error: ‘TreeNode’ has no member named ‘pair’
  220 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: In function ‘firstTreeMap’:
treemap.c:233:9: error: ‘TreeMap’ has no member named ‘current’
  233 |     tree->current = node;
      |         ^~
treemap.c:234:16: error: ‘TreeNode’ has no member named ‘pair’
  234 |     return node->pair;
      |                ^~
treemap.c: In function ‘nextTreeMap’:
treemap.c:238:29: error: ‘TreeMap’ has no member named ‘current’
  238 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:242:26: error: ‘TreeMap’ has no member named ‘current’
  242 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:255:9: error: ‘TreeMap’ has no member named ‘current’
  255 |     tree->current = node;
      |         ^~
treemap.c:256:33: error: ‘TreeNode’ has no member named ‘pair’
  256 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
e560be6
Fri 15 Sep 2023 03:38:49 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c:175:6: error: conflicting types for ‘eraseTreeMap’; have ‘void(TreeMap *, void *)’
  175 | void eraseTreeMap(TreeMap * tree, void* key){
      |      ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:15:6: note: previous declaration of ‘eraseTreeMap’ with type ‘void(TreeMap *, void *)’
   15 | void eraseTreeMap(TreeMap * tree, void* key);
      |      ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘eraseTreeMap’:
treemap.c:178:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  178 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:179:26: error: ‘TreeMap’ has no member named ‘current’
  179 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: At top level:
treemap.c:186:7: error: conflicting types for ‘searchTreeMap’; have ‘Pair *(TreeMap *, void *)’
  186 | Pair* searchTreeMap(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:8: note: previous declaration of ‘searchTreeMap’ with type ‘Pair *(TreeMap *, void *)’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |        ^~~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:190:36: error: ‘TreeNode’ has no member named ‘pair’
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:190:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:191:17: error: ‘TreeMap’ has no member named ‘current’
  191 |             tree->current = aux;
      |                 ^~
treemap.c:192:23: error: ‘TreeNode’ has no member named ‘pair’
  192 |             return aux->pair;
      |                       ^~
treemap.c:193:24: error: ‘TreeMap’ has no member named ‘lower_than’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:193:45: error: ‘TreeNode’ has no member named ‘pair’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: At top level:
treemap.c:205:7: error: conflicting types for ‘upperBound’; have ‘Pair *(TreeMap *, void *)’
  205 | Pair* upperBound(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:19:8: note: previous declaration of ‘upperBound’ with type ‘Pair *(TreeMap *, void *)’
   19 | Pair * upperBound(TreeMap * tree, void* key);
      |        ^~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:210:17: error: ‘TreeMap’ has no member named ‘lower_than’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:210:39: error: ‘TreeNode’ has no member named ‘pair’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:213:24: error: ‘TreeMap’ has no member named ‘lower_than’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:213:41: error: ‘TreeNode’ has no member named ‘pair’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:216:24: error: ‘TreeNode’ has no member named ‘pair’
  216 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:220:39: error: ‘TreeNode’ has no member named ‘pair’
  220 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: At top level:
treemap.c:223:8: error: conflicting types for ‘firstTreeMap’; have ‘Pair *(TreeMap *)’
  223 | Pair * firstTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:21:8: note: previous declaration of ‘firstTreeMap’ with type ‘Pair *(TreeMap *)’
   21 | Pair * firstTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘firstTreeMap’:
treemap.c:233:9: error: ‘TreeMap’ has no member named ‘current’
  233 |     tree->current = node;
      |         ^~
treemap.c:234:16: error: ‘TreeNode’ has no member named ‘pair’
  234 |     return node->pair;
      |                ^~
treemap.c: At top level:
treemap.c:237:8: error: conflicting types for ‘nextTreeMap’; have ‘Pair *(TreeMap *)’
  237 | Pair * nextTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:23:8: note: previous declaration of ‘nextTreeMap’ with type ‘Pair *(TreeMap *)’
   23 | Pair * nextTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘nextTreeMap’:
treemap.c:238:29: error: ‘TreeMap’ has no member named ‘current’
  238 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:242:26: error: ‘TreeMap’ has no member named ‘current’
  242 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:255:9: error: ‘TreeMap’ has no member named ‘current’
  255 |     tree->current = node;
      |         ^~
treemap.c:256:33: error: ‘TreeNode’ has no member named ‘pair’
  256 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:221:4: error: control reaches end of non-void function [-Werror=return-type]
  221 |    }
      |    ^
treemap.c: In function ‘firstTreeMap’:
treemap.c:235:1: error: control reaches end of non-void function [-Werror=return-type]
  235 | }
      | ^
treemap.c: In function ‘nextTreeMap’:
treemap.c:257:1: error: control reaches end of non-void function [-Werror=return-type]
  257 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
741e999
Fri 15 Sep 2023 03:42:30 AM UTC: 
 treemap.c | 33 +++++++++++++++++++--------------
 1 file changed, 19 insertions(+), 14 deletions(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c: In function ‘removeNode’:
treemap.c:143:18: error: ‘TreeNode’ has no member named ‘pair’
  143 |         free(node->pair); // Liberar la memoria asociada al par (key, value)
      |                  ^~
treemap.c:161:18: error: ‘TreeNode’ has no member named ‘pair’
  161 |         free(node->pair); // Liberar la memoria asociada al par (key, value)
      |                  ^~
treemap.c:168:13: error: ‘TreeNode’ has no member named ‘pair’
  168 |         node->pair->key = successor->pair->key;
      |             ^~
treemap.c:168:36: error: ‘TreeNode’ has no member named ‘pair’
  168 |         node->pair->key = successor->pair->key;
      |                                    ^~
treemap.c:169:13: error: ‘TreeNode’ has no member named ‘pair’
  169 |         node->pair->value = successor->pair->value;
      |             ^~
treemap.c:169:38: error: ‘TreeNode’ has no member named ‘pair’
  169 |         node->pair->value = successor->pair->value;
      |                                      ^~
treemap.c: In function ‘eraseTreeMap’:
treemap.c:183:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  183 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:184:26: error: ‘TreeMap’ has no member named ‘current’
  184 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: In function ‘searchTreeMap’:
treemap.c:195:36: error: ‘TreeNode’ has no member named ‘pair’
  195 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:195:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  195 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:196:17: error: ‘TreeMap’ has no member named ‘current’
  196 |             tree->current = aux;
      |                 ^~
treemap.c:197:23: error: ‘TreeNode’ has no member named ‘pair’
  197 |             return aux->pair;
      |                       ^~
treemap.c:198:24: error: ‘TreeMap’ has no member named ‘lower_than’
  198 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:198:45: error: ‘TreeNode’ has no member named ‘pair’
  198 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: In function ‘upperBound’:
treemap.c:215:17: error: ‘TreeMap’ has no member named ‘lower_than’
  215 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:215:39: error: ‘TreeNode’ has no member named ‘pair’
  215 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:218:24: error: ‘TreeMap’ has no member named ‘lower_than’
  218 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:218:41: error: ‘TreeNode’ has no member named ‘pair’
  218 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:221:24: error: ‘TreeNode’ has no member named ‘pair’
  221 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:225:39: error: ‘TreeNode’ has no member named ‘pair’
  225 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: In function ‘firstTreeMap’:
treemap.c:238:9: error: ‘TreeMap’ has no member named ‘current’
  238 |     tree->current = node;
      |         ^~
treemap.c:239:16: error: ‘TreeNode’ has no member named ‘pair’
  239 |     return node->pair;
      |                ^~
treemap.c: In function ‘nextTreeMap’:
treemap.c:243:29: error: ‘TreeMap’ has no member named ‘current’
  243 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:247:26: error: ‘TreeMap’ has no member named ‘current’
  247 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:260:9: error: ‘TreeMap’ has no member named ‘current’
  260 |     tree->current = node;
      |         ^~
treemap.c:261:33: error: ‘TreeNode’ has no member named ‘pair’
  261 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
cc9af0b
Fri 15 Sep 2023 03:42:40 AM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c: In function ‘removeNode’:
treemap.c:143:18: error: ‘TreeNode’ has no member named ‘pair’
  143 |         free(node->pair); // Liberar la memoria asociada al par (key, value)
      |                  ^~
treemap.c:161:18: error: ‘TreeNode’ has no member named ‘pair’
  161 |         free(node->pair); // Liberar la memoria asociada al par (key, value)
      |                  ^~
treemap.c:168:13: error: ‘TreeNode’ has no member named ‘pair’
  168 |         node->pair->key = successor->pair->key;
      |             ^~
treemap.c:168:36: error: ‘TreeNode’ has no member named ‘pair’
  168 |         node->pair->key = successor->pair->key;
      |                                    ^~
treemap.c:169:13: error: ‘TreeNode’ has no member named ‘pair’
  169 |         node->pair->value = successor->pair->value;
      |             ^~
treemap.c:169:38: error: ‘TreeNode’ has no member named ‘pair’
  169 |         node->pair->value = successor->pair->value;
      |                                      ^~
treemap.c: At top level:
treemap.c:180:6: error: conflicting types for ‘eraseTreeMap’; have ‘void(TreeMap *, void *)’
  180 | void eraseTreeMap(TreeMap * tree, void* key){
      |      ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:15:6: note: previous declaration of ‘eraseTreeMap’ with type ‘void(TreeMap *, void *)’
   15 | void eraseTreeMap(TreeMap * tree, void* key);
      |      ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘eraseTreeMap’:
treemap.c:183:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  183 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:184:26: error: ‘TreeMap’ has no member named ‘current’
  184 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: At top level:
treemap.c:191:7: error: conflicting types for ‘searchTreeMap’; have ‘Pair *(TreeMap *, void *)’
  191 | Pair* searchTreeMap(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:8: note: previous declaration of ‘searchTreeMap’ with type ‘Pair *(TreeMap *, void *)’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |        ^~~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:195:36: error: ‘TreeNode’ has no member named ‘pair’
  195 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:195:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  195 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:196:17: error: ‘TreeMap’ has no member named ‘current’
  196 |             tree->current = aux;
      |                 ^~
treemap.c:197:23: error: ‘TreeNode’ has no member named ‘pair’
  197 |             return aux->pair;
      |                       ^~
treemap.c:198:24: error: ‘TreeMap’ has no member named ‘lower_than’
  198 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:198:45: error: ‘TreeNode’ has no member named ‘pair’
  198 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: At top level:
treemap.c:210:7: error: conflicting types for ‘upperBound’; have ‘Pair *(TreeMap *, void *)’
  210 | Pair* upperBound(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:19:8: note: previous declaration of ‘upperBound’ with type ‘Pair *(TreeMap *, void *)’
   19 | Pair * upperBound(TreeMap * tree, void* key);
      |        ^~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:215:17: error: ‘TreeMap’ has no member named ‘lower_than’
  215 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:215:39: error: ‘TreeNode’ has no member named ‘pair’
  215 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:218:24: error: ‘TreeMap’ has no member named ‘lower_than’
  218 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:218:41: error: ‘TreeNode’ has no member named ‘pair’
  218 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:221:24: error: ‘TreeNode’ has no member named ‘pair’
  221 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:225:39: error: ‘TreeNode’ has no member named ‘pair’
  225 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: At top level:
treemap.c:228:8: error: conflicting types for ‘firstTreeMap’; have ‘Pair *(TreeMap *)’
  228 | Pair * firstTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:21:8: note: previous declaration of ‘firstTreeMap’ with type ‘Pair *(TreeMap *)’
   21 | Pair * firstTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘firstTreeMap’:
treemap.c:238:9: error: ‘TreeMap’ has no member named ‘current’
  238 |     tree->current = node;
      |         ^~
treemap.c:239:16: error: ‘TreeNode’ has no member named ‘pair’
  239 |     return node->pair;
      |                ^~
treemap.c: At top level:
treemap.c:242:8: error: conflicting types for ‘nextTreeMap’; have ‘Pair *(TreeMap *)’
  242 | Pair * nextTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:23:8: note: previous declaration of ‘nextTreeMap’ with type ‘Pair *(TreeMap *)’
   23 | Pair * nextTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘nextTreeMap’:
treemap.c:243:29: error: ‘TreeMap’ has no member named ‘current’
  243 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:247:26: error: ‘TreeMap’ has no member named ‘current’
  247 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:260:9: error: ‘TreeMap’ has no member named ‘current’
  260 |     tree->current = node;
      |         ^~
treemap.c:261:33: error: ‘TreeNode’ has no member named ‘pair’
  261 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:226:4: error: control reaches end of non-void function [-Werror=return-type]
  226 |    }
      |    ^
treemap.c: In function ‘firstTreeMap’:
treemap.c:240:1: error: control reaches end of non-void function [-Werror=return-type]
  240 | }
      | ^
treemap.c: In function ‘nextTreeMap’:
treemap.c:262:1: error: control reaches end of non-void function [-Werror=return-type]
  262 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
fa9643c
Fri 15 Sep 2023 03:49:10 AM UTC: 
 treemap.c | 47 ++++++++++++++++++++++++-----------------------
 1 file changed, 24 insertions(+), 23 deletions(-)
In file included from test.c:4:
treemap.c:154:16: error: redefinition of ‘struct TreeNode’
  154 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:160:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  160 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:163:16: error: redefinition of ‘struct TreeMap’
  163 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:166:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  166 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:169:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  169 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c:181:6: error: conflicting types for ‘eraseTreeMap’; have ‘void(TreeMap *, void *)’
  181 | void eraseTreeMap(TreeMap * tree, void* key){
      |      ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:15:6: note: previous declaration of ‘eraseTreeMap’ with type ‘void(TreeMap *, void *)’
   15 | void eraseTreeMap(TreeMap * tree, void* key);
      |      ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘eraseTreeMap’:
treemap.c:184:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  184 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:185:26: error: ‘TreeMap’ has no member named ‘current’
  185 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:186:16: error: passing argument 1 of ‘removeNode’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  186 |     removeNode(tree, node);
      |                ^~~~
      |                |
      |                TreeMap *
treemap.c:102:26: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
  102 | void removeNode(TreeMap* tree, TreeNode* node) {
      |                 ~~~~~~~~~^~~~
treemap.c:186:22: error: passing argument 2 of ‘removeNode’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  186 |     removeNode(tree, node);
      |                      ^~~~
      |                      |
      |                      TreeNode *
treemap.c:102:42: note: expected ‘TreeNode *’ but argument is of type ‘TreeNode *’
  102 | void removeNode(TreeMap* tree, TreeNode* node) {
      |                                ~~~~~~~~~~^~~~
treemap.c: At top level:
treemap.c:192:7: error: conflicting types for ‘searchTreeMap’; have ‘Pair *(TreeMap *, void *)’
  192 | Pair* searchTreeMap(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:8: note: previous declaration of ‘searchTreeMap’ with type ‘Pair *(TreeMap *, void *)’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |        ^~~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:196:36: error: ‘TreeNode’ has no member named ‘pair’
  196 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:196:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  196 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:197:17: error: ‘TreeMap’ has no member named ‘current’
  197 |             tree->current = aux;
      |                 ^~
treemap.c:198:23: error: ‘TreeNode’ has no member named ‘pair’
  198 |             return aux->pair;
      |                       ^~
treemap.c:199:24: error: ‘TreeMap’ has no member named ‘lower_than’
  199 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:199:45: error: ‘TreeNode’ has no member named ‘pair’
  199 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: At top level:
treemap.c:211:7: error: conflicting types for ‘upperBound’; have ‘Pair *(TreeMap *, void *)’
  211 | Pair* upperBound(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:19:8: note: previous declaration of ‘upperBound’ with type ‘Pair *(TreeMap *, void *)’
   19 | Pair * upperBound(TreeMap * tree, void* key);
      |        ^~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:216:17: error: ‘TreeMap’ has no member named ‘lower_than’
  216 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:216:39: error: ‘TreeNode’ has no member named ‘pair’
  216 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:219:24: error: ‘TreeMap’ has no member named ‘lower_than’
  219 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:219:41: error: ‘TreeNode’ has no member named ‘pair’
  219 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:222:24: error: ‘TreeNode’ has no member named ‘pair’
  222 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:226:39: error: ‘TreeNode’ has no member named ‘pair’
  226 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: At top level:
treemap.c:229:8: error: conflicting types for ‘firstTreeMap’; have ‘Pair *(TreeMap *)’
  229 | Pair * firstTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:21:8: note: previous declaration of ‘firstTreeMap’ with type ‘Pair *(TreeMap *)’
   21 | Pair * firstTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘firstTreeMap’:
treemap.c:239:9: error: ‘TreeMap’ has no member named ‘current’
  239 |     tree->current = node;
      |         ^~
treemap.c:240:16: error: ‘TreeNode’ has no member named ‘pair’
  240 |     return node->pair;
      |                ^~
treemap.c: At top level:
treemap.c:243:8: error: conflicting types for ‘nextTreeMap’; have ‘Pair *(TreeMap *)’
  243 | Pair * nextTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:23:8: note: previous declaration of ‘nextTreeMap’ with type ‘Pair *(TreeMap *)’
   23 | Pair * nextTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘nextTreeMap’:
treemap.c:244:29: error: ‘TreeMap’ has no member named ‘current’
  244 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:248:26: error: ‘TreeMap’ has no member named ‘current’
  248 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:261:9: error: ‘TreeMap’ has no member named ‘current’
  261 |     tree->current = node;
      |         ^~
treemap.c:262:33: error: ‘TreeNode’ has no member named ‘pair’
  262 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:227:4: error: control reaches end of non-void function [-Werror=return-type]
  227 |    }
      |    ^
treemap.c: In function ‘firstTreeMap’:
treemap.c:241:1: error: control reaches end of non-void function [-Werror=return-type]
  241 | }
      | ^
treemap.c: In function ‘nextTreeMap’:
treemap.c:263:1: error: control reaches end of non-void function [-Werror=return-type]
  263 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
66b864b
Fri 15 Sep 2023 02:09:00 PM UTC: 
 treemap.c | 96 +++++++++++++++++++++++++++++----------------------------------
 1 file changed, 44 insertions(+), 52 deletions(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c: In function ‘removeNode’:
treemap.c:128:4: error: called object ‘node’ is not a function or function pointer
  128 | if(node NULL)
      |    ^~~~
treemap.c:125:43: note: declared here
  125 | void removeNode(TreeMap * tree, TreeNode* node)
      |                                 ~~~~~~~~~~^~~~
treemap.c: At top level:
treemap.c:131:3: error: expected identifier or ‘(’ before ‘if’
  131 |   if (node->left == NULL && node->right == NULL)
      |   ^~
treemap.c:144:5: error: expected identifier or ‘(’ before ‘else’
  144 |   } else if (node->left == NULL || node->right == NULL)
      |     ^~~~
treemap.c:162:3: error: expected identifier or ‘(’ before ‘else’
  162 |   else
      |   ^~~~
treemap.c:168:1: error: expected identifier or ‘(’ before ‘}’ token
  168 | }
      | ^
treemap.c:173:6: error: conflicting types for ‘eraseTreeMap’; have ‘void(TreeMap *, void *)’
  173 | void eraseTreeMap(TreeMap * tree, void* key){
      |      ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:15:6: note: previous declaration of ‘eraseTreeMap’ with type ‘void(TreeMap *, void *)’
   15 | void eraseTreeMap(TreeMap * tree, void* key);
      |      ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘eraseTreeMap’:
treemap.c:176:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  176 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:177:26: error: ‘TreeMap’ has no member named ‘current’
  177 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: At top level:
treemap.c:184:7: error: conflicting types for ‘searchTreeMap’; have ‘Pair *(TreeMap *, void *)’
  184 | Pair* searchTreeMap(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:8: note: previous declaration of ‘searchTreeMap’ with type ‘Pair *(TreeMap *, void *)’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |        ^~~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:188:36: error: ‘TreeNode’ has no member named ‘pair’
  188 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:188:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  188 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:189:17: error: ‘TreeMap’ has no member named ‘current’
  189 |             tree->current = aux;
      |                 ^~
treemap.c:190:23: error: ‘TreeNode’ has no member named ‘pair’
  190 |             return aux->pair;
      |                       ^~
treemap.c:191:24: error: ‘TreeMap’ has no member named ‘lower_than’
  191 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:191:45: error: ‘TreeNode’ has no member named ‘pair’
  191 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: At top level:
treemap.c:203:7: error: conflicting types for ‘upperBound’; have ‘Pair *(TreeMap *, void *)’
  203 | Pair* upperBound(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:19:8: note: previous declaration of ‘upperBound’ with type ‘Pair *(TreeMap *, void *)’
   19 | Pair * upperBound(TreeMap * tree, void* key);
      |        ^~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:208:17: error: ‘TreeMap’ has no member named ‘lower_than’
  208 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:208:39: error: ‘TreeNode’ has no member named ‘pair’
  208 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:211:24: error: ‘TreeMap’ has no member named ‘lower_than’
  211 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:211:41: error: ‘TreeNode’ has no member named ‘pair’
  211 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:214:24: error: ‘TreeNode’ has no member named ‘pair’
  214 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:218:39: error: ‘TreeNode’ has no member named ‘pair’
  218 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: At top level:
treemap.c:221:8: error: conflicting types for ‘firstTreeMap’; have ‘Pair *(TreeMap *)’
  221 | Pair * firstTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:21:8: note: previous declaration of ‘firstTreeMap’ with type ‘Pair *(TreeMap *)’
   21 | Pair * firstTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘firstTreeMap’:
treemap.c:231:9: error: ‘TreeMap’ has no member named ‘current’
  231 |     tree->current = node;
      |         ^~
treemap.c:232:16: error: ‘TreeNode’ has no member named ‘pair’
  232 |     return node->pair;
      |                ^~
treemap.c: At top level:
treemap.c:235:8: error: conflicting types for ‘nextTreeMap’; have ‘Pair *(TreeMap *)’
  235 | Pair * nextTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:23:8: note: previous declaration of ‘nextTreeMap’ with type ‘Pair *(TreeMap *)’
   23 | Pair * nextTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘nextTreeMap’:
treemap.c:236:29: error: ‘TreeMap’ has no member named ‘current’
  236 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:240:26: error: ‘TreeMap’ has no member named ‘current’
  240 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:253:9: error: ‘TreeMap’ has no member named ‘current’
  253 |     tree->current = node;
      |         ^~
treemap.c:254:33: error: ‘TreeNode’ has no member named ‘pair’
  254 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:219:4: error: control reaches end of non-void function [-Werror=return-type]
  219 |    }
      |    ^
treemap.c: In function ‘firstTreeMap’:
treemap.c:233:1: error: control reaches end of non-void function [-Werror=return-type]
  233 | }
      | ^
treemap.c: In function ‘nextTreeMap’:
treemap.c:255:1: error: control reaches end of non-void function [-Werror=return-type]
  255 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
e31f7b3
Fri 15 Sep 2023 02:09:14 PM UTC: 
 treemap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c:131:3: error: expected identifier or ‘(’ before ‘if’
  131 |   if (node->left == NULL && node->right == NULL)
      |   ^~
treemap.c:144:5: error: expected identifier or ‘(’ before ‘else’
  144 |   } else if (node->left == NULL || node->right == NULL)
      |     ^~~~
treemap.c:162:3: error: expected identifier or ‘(’ before ‘else’
  162 |   else
      |   ^~~~
treemap.c:168:1: error: expected identifier or ‘(’ before ‘}’ token
  168 | }
      | ^
treemap.c:173:6: error: conflicting types for ‘eraseTreeMap’; have ‘void(TreeMap *, void *)’
  173 | void eraseTreeMap(TreeMap * tree, void* key){
      |      ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:15:6: note: previous declaration of ‘eraseTreeMap’ with type ‘void(TreeMap *, void *)’
   15 | void eraseTreeMap(TreeMap * tree, void* key);
      |      ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘eraseTreeMap’:
treemap.c:176:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  176 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:177:26: error: ‘TreeMap’ has no member named ‘current’
  177 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: At top level:
treemap.c:184:7: error: conflicting types for ‘searchTreeMap’; have ‘Pair *(TreeMap *, void *)’
  184 | Pair* searchTreeMap(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:8: note: previous declaration of ‘searchTreeMap’ with type ‘Pair *(TreeMap *, void *)’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |        ^~~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:188:36: error: ‘TreeNode’ has no member named ‘pair’
  188 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:188:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  188 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:189:17: error: ‘TreeMap’ has no member named ‘current’
  189 |             tree->current = aux;
      |                 ^~
treemap.c:190:23: error: ‘TreeNode’ has no member named ‘pair’
  190 |             return aux->pair;
      |                       ^~
treemap.c:191:24: error: ‘TreeMap’ has no member named ‘lower_than’
  191 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:191:45: error: ‘TreeNode’ has no member named ‘pair’
  191 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: At top level:
treemap.c:203:7: error: conflicting types for ‘upperBound’; have ‘Pair *(TreeMap *, void *)’
  203 | Pair* upperBound(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:19:8: note: previous declaration of ‘upperBound’ with type ‘Pair *(TreeMap *, void *)’
   19 | Pair * upperBound(TreeMap * tree, void* key);
      |        ^~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:208:17: error: ‘TreeMap’ has no member named ‘lower_than’
  208 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:208:39: error: ‘TreeNode’ has no member named ‘pair’
  208 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:211:24: error: ‘TreeMap’ has no member named ‘lower_than’
  211 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:211:41: error: ‘TreeNode’ has no member named ‘pair’
  211 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:214:24: error: ‘TreeNode’ has no member named ‘pair’
  214 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:218:39: error: ‘TreeNode’ has no member named ‘pair’
  218 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: At top level:
treemap.c:221:8: error: conflicting types for ‘firstTreeMap’; have ‘Pair *(TreeMap *)’
  221 | Pair * firstTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:21:8: note: previous declaration of ‘firstTreeMap’ with type ‘Pair *(TreeMap *)’
   21 | Pair * firstTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘firstTreeMap’:
treemap.c:231:9: error: ‘TreeMap’ has no member named ‘current’
  231 |     tree->current = node;
      |         ^~
treemap.c:232:16: error: ‘TreeNode’ has no member named ‘pair’
  232 |     return node->pair;
      |                ^~
treemap.c: At top level:
treemap.c:235:8: error: conflicting types for ‘nextTreeMap’; have ‘Pair *(TreeMap *)’
  235 | Pair * nextTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:23:8: note: previous declaration of ‘nextTreeMap’ with type ‘Pair *(TreeMap *)’
   23 | Pair * nextTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘nextTreeMap’:
treemap.c:236:29: error: ‘TreeMap’ has no member named ‘current’
  236 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:240:26: error: ‘TreeMap’ has no member named ‘current’
  240 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:253:9: error: ‘TreeMap’ has no member named ‘current’
  253 |     tree->current = node;
      |         ^~
treemap.c:254:33: error: ‘TreeNode’ has no member named ‘pair’
  254 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:219:4: error: control reaches end of non-void function [-Werror=return-type]
  219 |    }
      |    ^
treemap.c: In function ‘firstTreeMap’:
treemap.c:233:1: error: control reaches end of non-void function [-Werror=return-type]
  233 | }
      | ^
treemap.c: In function ‘nextTreeMap’:
treemap.c:255:1: error: control reaches end of non-void function [-Werror=return-type]
  255 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
3b22a3e
Fri 15 Sep 2023 02:22:08 PM UTC: 
 treemap.c | 495 ++++++++++++++++++++++++++++++++++++++++++++++----------------
 1 file changed, 373 insertions(+), 122 deletions(-)
In file included from test.c:4:
treemap.c:252:2: error: stray ‘#’ in program
  252 | }#include <stdio.h>
      |  ^
treemap.c:252:11: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘<’ token
  252 | }#include <stdio.h>
      |           ^
treemap.c:259:8: error: redefinition of ‘struct TreeNode’
  259 | struct TreeNode
      |        ^~~~~~~~
treemap.c:8:8: note: originally defined here
    8 | struct TreeNode
      |        ^~~~~~~~
treemap.c:267:8: error: redefinition of ‘struct TreeMap’
  267 | struct TreeMap
      |        ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap
      |        ^~~~~~~
treemap.c:274:5: error: redefinition of ‘is_equal’
  274 | int is_equal(TreeMap* tree, void* key1, void* key2)
      |     ^~~~~~~~
treemap.c:23:5: note: previous definition of ‘is_equal’ with type ‘int(TreeMap *, void *, void *)’
   23 | int is_equal(TreeMap* tree, void* key1, void* key2)
      |     ^~~~~~~~
treemap.c:281:12: error: redefinition of ‘createTreeNode’
  281 | TreeNode * createTreeNode(void* key, void * value)
      |            ^~~~~~~~~~~~~~
treemap.c:30:12: note: previous definition of ‘createTreeNode’ with type ‘TreeNode *(void *, void *)’
   30 | TreeNode * createTreeNode(void* key, void * value)
      |            ^~~~~~~~~~~~~~
treemap.c:292:11: error: redefinition of ‘createTreeMap’
  292 | TreeMap * createTreeMap(int (*lower_than) (void* key1, void* key2))
      |           ^~~~~~~~~~~~~
treemap.c:41:11: note: previous definition of ‘createTreeMap’ with type ‘TreeMap *(int (*)(void *, void *))’
   41 | TreeMap * createTreeMap(int (*lower_than) (void* key1, void* key2))
      |           ^~~~~~~~~~~~~
treemap.c:301:6: error: redefinition of ‘insertTreeMap’
  301 | void insertTreeMap(TreeMap * tree, void* key, void * value)
      |      ^~~~~~~~~~~~~
treemap.c:50:6: note: previous definition of ‘insertTreeMap’ with type ‘void(TreeMap *, void *, void *)’
   50 | void insertTreeMap(TreeMap * tree, void* key, void * value)
      |      ^~~~~~~~~~~~~
treemap.c:342:12: error: redefinition of ‘minimum’
  342 | TreeNode * minimum(TreeNode * x)
      |            ^~~~~~~
treemap.c:91:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   91 | TreeNode * minimum(TreeNode * x)
      |            ^~~~~~~
treemap.c:351:6: error: redefinition of ‘removeNode’
  351 | void removeNode(TreeMap * tree, TreeNode* node)
      |      ^~~~~~~~~~
treemap.c:100:6: note: previous definition of ‘removeNode’ with type ‘void(TreeMap *, TreeNode *)’
  100 | void removeNode(TreeMap * tree, TreeNode* node)
      |      ^~~~~~~~~~
treemap.c:396:6: error: redefinition of ‘eraseTreeMap’
  396 | void eraseTreeMap(TreeMap * tree, void* key)
      |      ^~~~~~~~~~~~
treemap.c:145:6: note: previous definition of ‘eraseTreeMap’ with type ‘void(TreeMap *, void *)’
  145 | void eraseTreeMap(TreeMap * tree, void* key)
      |      ^~~~~~~~~~~~
treemap.c:405:8: error: redefinition of ‘searchTreeMap’
  405 | Pair * searchTreeMap(TreeMap * tree, void* key)
      |        ^~~~~~~~~~~~~
treemap.c:154:8: note: previous definition of ‘searchTreeMap’ with type ‘Pair *(TreeMap *, void *)’
  154 | Pair * searchTreeMap(TreeMap * tree, void* key)
      |        ^~~~~~~~~~~~~
treemap.c:430:8: error: redefinition of ‘upperBound’
  430 | Pair * upperBound(TreeMap * tree, void* key)
      |        ^~~~~~~~~~
treemap.c:179:8: note: previous definition of ‘upperBound’ with type ‘Pair *(TreeMap *, void *)’
  179 | Pair * upperBound(TreeMap * tree, void* key)
      |        ^~~~~~~~~~
treemap.c:458:8: error: redefinition of ‘firstTreeMap’
  458 | Pair * firstTreeMap(TreeMap * tree)
      |        ^~~~~~~~~~~~
treemap.c:207:8: note: previous definition of ‘firstTreeMap’ with type ‘Pair *(TreeMap *)’
  207 | Pair * firstTreeMap(TreeMap * tree)
      |        ^~~~~~~~~~~~
treemap.c:474:8: error: redefinition of ‘nextTreeMap’
  474 | Pair * nextTreeMap(TreeMap * tree)
      |        ^~~~~~~~~~~
treemap.c:223:8: note: previous definition of ‘nextTreeMap’ with type ‘Pair *(TreeMap *)’
  223 | Pair * nextTreeMap(TreeMap * tree)
      |        ^~~~~~~~~~~
test.c: In function ‘nextTreeMap’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
ee3e836
Fri 15 Sep 2023 02:22:13 PM UTC: 
 treemap.c | 549 +++++++++++++++++---------------------------------------------
 1 file changed, 150 insertions(+), 399 deletions(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c: In function ‘eraseTreeMap’:
treemap.c:178:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  178 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:179:26: error: ‘TreeMap’ has no member named ‘current’
  179 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: In function ‘searchTreeMap’:
treemap.c:190:36: error: ‘TreeNode’ has no member named ‘pair’
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:190:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  190 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:191:17: error: ‘TreeMap’ has no member named ‘current’
  191 |             tree->current = aux;
      |                 ^~
treemap.c:192:23: error: ‘TreeNode’ has no member named ‘pair’
  192 |             return aux->pair;
      |                       ^~
treemap.c:193:24: error: ‘TreeMap’ has no member named ‘lower_than’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:193:45: error: ‘TreeNode’ has no member named ‘pair’
  193 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: In function ‘upperBound’:
treemap.c:210:17: error: ‘TreeMap’ has no member named ‘lower_than’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:210:39: error: ‘TreeNode’ has no member named ‘pair’
  210 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:213:24: error: ‘TreeMap’ has no member named ‘lower_than’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:213:41: error: ‘TreeNode’ has no member named ‘pair’
  213 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:216:24: error: ‘TreeNode’ has no member named ‘pair’
  216 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:220:39: error: ‘TreeNode’ has no member named ‘pair’
  220 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: In function ‘firstTreeMap’:
treemap.c:233:9: error: ‘TreeMap’ has no member named ‘current’
  233 |     tree->current = node;
      |         ^~
treemap.c:234:16: error: ‘TreeNode’ has no member named ‘pair’
  234 |     return node->pair;
      |                ^~
treemap.c: In function ‘nextTreeMap’:
treemap.c:238:29: error: ‘TreeMap’ has no member named ‘current’
  238 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:242:26: error: ‘TreeMap’ has no member named ‘current’
  242 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:255:9: error: ‘TreeMap’ has no member named ‘current’
  255 |     tree->current = node;
      |         ^~
treemap.c:256:33: error: ‘TreeNode’ has no member named ‘pair’
  256 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
test.c: In function ‘removeNode’:
test.c:503:5: error: ‘main’ is normally a non-static function [-Werror=main]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:606:1: error: expected declaration or statement at end of input
  606 | }
      | ^
At top level:
test.c:503:5: error: ‘main’ defined but not used [-Werror=unused-function]
  503 | int main( int argc, char *argv[] ) {
      |     ^~~~
cc1: all warnings being treated as errors
Compilation failed
b1160dd
Fri 15 Sep 2023 02:22:35 PM UTC: 
 treemap.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
In file included from test.c:4:
treemap.c:102:16: error: redefinition of ‘struct TreeNode’
  102 | typedef struct TreeNode {
      |                ^~~~~~~~
treemap.c:9:8: note: originally defined here
    9 | struct TreeNode {
      |        ^~~~~~~~
treemap.c:108:3: error: conflicting types for ‘TreeNode’; have ‘struct TreeNode’
  108 | } TreeNode;
      |   ^~~~~~~~
treemap.c:6:25: note: previous declaration of ‘TreeNode’ with type ‘TreeNode’
    6 | typedef struct TreeNode TreeNode;
      |                         ^~~~~~~~
treemap.c:111:16: error: redefinition of ‘struct TreeMap’
  111 | typedef struct TreeMap {
      |                ^~~~~~~
treemap.c:16:8: note: originally defined here
   16 | struct TreeMap {
      |        ^~~~~~~
treemap.c:114:3: error: conflicting types for ‘TreeMap’; have ‘struct TreeMap’
  114 | } TreeMap;
      |   ^~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:4:24: note: previous declaration of ‘TreeMap’ with type ‘TreeMap’
    4 | typedef struct TreeMap TreeMap;
      |                        ^~~~~~~
In file included from test.c:4:
treemap.c:117:11: error: conflicting types for ‘minimum’; have ‘TreeNode *(TreeNode *)’
  117 | TreeNode* minimum(TreeNode* node) {
      |           ^~~~~~~
treemap.c:94:12: note: previous definition of ‘minimum’ with type ‘TreeNode *(TreeNode *)’
   94 | TreeNode * minimum(TreeNode * x) {
      |            ^~~~~~~
treemap.c:176:6: error: conflicting types for ‘eraseTreeMap’; have ‘void(TreeMap *, void *)’
  176 | void eraseTreeMap(TreeMap * tree, void* key){
      |      ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:15:6: note: previous declaration of ‘eraseTreeMap’ with type ‘void(TreeMap *, void *)’
   15 | void eraseTreeMap(TreeMap * tree, void* key);
      |      ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘eraseTreeMap’:
treemap.c:179:23: error: passing argument 1 of ‘searchTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  179 |     if (searchTreeMap(tree, key) == NULL) return;
      |                       ^~~~
      |                       |
      |                       TreeMap *
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:32: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |                      ~~~~~~~~~~^~~~
In file included from test.c:4:
treemap.c:180:26: error: ‘TreeMap’ has no member named ‘current’
  180 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c: At top level:
treemap.c:187:7: error: conflicting types for ‘searchTreeMap’; have ‘Pair *(TreeMap *, void *)’
  187 | Pair* searchTreeMap(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:17:8: note: previous declaration of ‘searchTreeMap’ with type ‘Pair *(TreeMap *, void *)’
   17 | Pair * searchTreeMap(TreeMap * tree, void* key);
      |        ^~~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘searchTreeMap’:
treemap.c:191:36: error: ‘TreeNode’ has no member named ‘pair’
  191 |         if (is_equal(tree, key, aux->pair->key)) {
      |                                    ^~
treemap.c:191:22: error: passing argument 1 of ‘is_equal’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  191 |         if (is_equal(tree, key, aux->pair->key)) {
      |                      ^~~~
      |                      |
      |                      TreeMap *
treemap.c:22:23: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   22 | int is_equal(TreeMap* tree, void* key1, void* key2){
      |              ~~~~~~~~~^~~~
treemap.c:192:17: error: ‘TreeMap’ has no member named ‘current’
  192 |             tree->current = aux;
      |                 ^~
treemap.c:193:23: error: ‘TreeNode’ has no member named ‘pair’
  193 |             return aux->pair;
      |                       ^~
treemap.c:194:24: error: ‘TreeMap’ has no member named ‘lower_than’
  194 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                        ^~
treemap.c:194:45: error: ‘TreeNode’ has no member named ‘pair’
  194 |         } else if (tree->lower_than(key, aux->pair->key)) {
      |                                             ^~
treemap.c: At top level:
treemap.c:206:7: error: conflicting types for ‘upperBound’; have ‘Pair *(TreeMap *, void *)’
  206 | Pair* upperBound(TreeMap* tree, void* key) {
      |       ^~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:19:8: note: previous declaration of ‘upperBound’ with type ‘Pair *(TreeMap *, void *)’
   19 | Pair * upperBound(TreeMap * tree, void* key);
      |        ^~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:211:17: error: ‘TreeMap’ has no member named ‘lower_than’
  211 |         if (tree->lower_than(key, node->pair->key)) {
      |                 ^~
treemap.c:211:39: error: ‘TreeNode’ has no member named ‘pair’
  211 |         if (tree->lower_than(key, node->pair->key)) {
      |                                       ^~
treemap.c:214:24: error: ‘TreeMap’ has no member named ‘lower_than’
  214 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                        ^~
treemap.c:214:41: error: ‘TreeNode’ has no member named ‘pair’
  214 |         } else if (tree->lower_than(node->pair->key, key)) {
      |                                         ^~
treemap.c:217:24: error: ‘TreeNode’ has no member named ‘pair’
  217 |             return node->pair;  // La clave es igual a la clave del nodo
      |                        ^~
treemap.c:221:39: error: ‘TreeNode’ has no member named ‘pair’
  221 |     return (ub_node != NULL) ? ub_node->pair : NULL;
      |                                       ^~
treemap.c: At top level:
treemap.c:224:8: error: conflicting types for ‘firstTreeMap’; have ‘Pair *(TreeMap *)’
  224 | Pair * firstTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:21:8: note: previous declaration of ‘firstTreeMap’ with type ‘Pair *(TreeMap *)’
   21 | Pair * firstTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘firstTreeMap’:
treemap.c:234:9: error: ‘TreeMap’ has no member named ‘current’
  234 |     tree->current = node;
      |         ^~
treemap.c:235:16: error: ‘TreeNode’ has no member named ‘pair’
  235 |     return node->pair;
      |                ^~
treemap.c: At top level:
treemap.c:238:8: error: conflicting types for ‘nextTreeMap’; have ‘Pair *(TreeMap *)’
  238 | Pair * nextTreeMap(TreeMap * tree) {
      |        ^~~~~~~~~~~
In file included from treemap.c:4,
                 from test.c:4:
treemap.h:23:8: note: previous declaration of ‘nextTreeMap’ with type ‘Pair *(TreeMap *)’
   23 | Pair * nextTreeMap(TreeMap * tree);
      |        ^~~~~~~~~~~
In file included from test.c:4:
treemap.c: In function ‘nextTreeMap’:
treemap.c:239:29: error: ‘TreeMap’ has no member named ‘current’
  239 |     if (tree == NULL || tree->current == NULL) {
      |                             ^~
treemap.c:243:26: error: ‘TreeMap’ has no member named ‘current’
  243 |     TreeNode* node = tree->current;
      |                          ^~
treemap.c:256:9: error: ‘TreeMap’ has no member named ‘current’
  256 |     tree->current = node;
      |         ^~
treemap.c:257:33: error: ‘TreeNode’ has no member named ‘pair’
  257 |     return (node != NULL) ? node->pair : NULL;
      |                                 ^~
test.c: In function ‘initializeTree’:
test.c:61:9: error: ‘TreeMap’ has no member named ‘lower_than’
   61 |     tree->lower_than = lower_than_int;
      |         ^~
test.c:63:15: error: assignment to ‘TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   63 |     tree->root=createTreeNode(&p->id, p);
      |               ^
test.c:65:22: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   65 |     tree->root->right=createTreeNode(&p->id, p);
      |                      ^
test.c:68:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   68 |     tree->root->right->left=createTreeNode(&p->id, p);
      |                            ^
test.c:71:21: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
   71 |     tree->root->left=createTreeNode(&p->id, p);
      |                     ^
test.c: In function ‘create_test1’:
test.c:77:18: error: initialization of ‘TreeMap *’ from incompatible pointer type ‘TreeMap *’ [-Werror=incompatible-pointer-types]
   77 |     TreeMap* t = createTreeMap(lower_than_int);
      |                  ^~~~~~~~~~~~~
test.c:93:9: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |         ^~
test.c:93:44: error: ‘TreeMap’ has no member named ‘lower_than’
   93 |     if(t->lower_than != lower_than_int || t->lower_than(&i,&j) !=1 ) {
      |                                            ^~
test.c: In function ‘search_test1’:
test.c:112:12: error: ‘TreeMap’ has no member named ‘current’
  112 |     if(tree->current != tree->root){
      |            ^~
test.c: In function ‘search_test2’:
test.c:131:12: error: ‘TreeMap’ has no member named ‘current’
  131 |     if(tree->current != tree->root->right){
      |            ^~
test.c: In function ‘search_test3’:
test.c:151:12: error: ‘TreeMap’ has no member named ‘current’
  151 |     if(tree->current != tree->root->right->left){
      |            ^~
test.c: In function ‘insert_test1’:
test.c:175:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  175 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c: In function ‘insert_test2’:
test.c:192:19: error: passing argument 1 of ‘insertTreeMap’ from incompatible pointer type [-Werror=incompatible-pointer-types]
  192 |     insertTreeMap(tree, &p->id, p);
      |                   ^~~~
      |                   |
      |                   TreeMap *
In file included from test.c:4:
treemap.c:54:29: note: expected ‘TreeMap *’ but argument is of type ‘TreeMap *’
   54 | void insertTreeMap(TreeMap* tree, void* key, void* value) {
      |                    ~~~~~~~~~^~~~
test.c:196:34: error: ‘struct TreeNode’ has no member named ‘pair’
  196 |            tree->root->left->left->pair->value!=p) {
      |                                  ^~
test.c:203:41: error: ‘struct TreeNode’ has no member named ‘pair’
  203 |             (int*)tree->root->left->left->pair->key!=&p->id) {
      |                                         ^~
test.c:214:12: error: ‘TreeMap’ has no member named ‘current’
  214 |     if(tree->current != tree->root->left->left){
      |            ^~
test.c: In function ‘minimum_test’:
test.c:232:20: error: ‘TreeNode’ has no member named ‘pair’
  232 |     if ( *((int*) n->pair->key) != 1273){
      |                    ^~
test.c:233:91: error: ‘TreeNode’ has no member named ‘pair’
  233 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 1273)",*((int*) n->pair->key));
      |                                                                                           ^~
test.c:247:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  247 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c:251:20: error: ‘TreeNode’ has no member named ‘pair’
  251 |     if ( *((int*) n->pair->key) != 100){
      |                    ^~
test.c:252:90: error: ‘TreeNode’ has no member named ‘pair’
  252 |         sprintf(msg,"minimum retorna nodo con clave %d (deberia retornar 100)",*((int*) n->pair->key));
      |                                                                                          ^~
test.c: In function ‘erase_test2’:
test.c:283:36: error: ‘struct TreeNode’ has no member named ‘pair’
  283 |     if( * ((int*) tree->root->right->pair->key) != 6980) {
      |                                    ^~
test.c: In function ‘erase_test3’:
test.c:304:29: error: ‘TreeNode’ has no member named ‘pair’
  304 |     if( * ((int*) tree->root->pair->key) != 6980){
      |                             ^~
test.c:309:36: error: ‘struct TreeNode’ has no member named ‘pair’
  309 |     if( * ((int*) tree->root->right->pair->key) != 8213){
      |                                    ^~
test.c: In function ‘first_test2’:
test.c:337:27: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  337 |     tree->root->left->left=createTreeNode(&p->id, p);
      |                           ^
test.c: In function ‘next_test1’:
test.c:355:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  355 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:359:9: error: ‘TreeMap’ has no member named ‘current’
  359 |     tree->current = tree->root->left;
      |         ^~
test.c: In function ‘next_test2’:
test.c:379:9: error: ‘TreeMap’ has no member named ‘current’
  379 |     tree->current = tree->root;
      |         ^~
test.c: In function ‘next_test3’:
test.c:409:28: error: assignment to ‘struct TreeNode *’ from incompatible pointer type ‘TreeNode *’ [-Werror=incompatible-pointer-types]
  409 |     tree->root->left->right=createTreeNode(&p->id, p);
      |                            ^
test.c:412:9: error: ‘TreeMap’ has no member named ‘current’
  412 |     tree->current=tree->root->left->right;
      |         ^~
In file included from test.c:4:
treemap.c: In function ‘upperBound’:
treemap.c:222:4: error: control reaches end of non-void function [-Werror=return-type]
  222 |    }
      |    ^
treemap.c: In function ‘firstTreeMap’:
treemap.c:236:1: error: control reaches end of non-void function [-Werror=return-type]
  236 | }
      | ^
treemap.c: In function ‘nextTreeMap’:
treemap.c:258:1: error: control reaches end of non-void function [-Werror=return-type]
  258 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
4a91c8a
Fri 15 Sep 2023 02:33:58 PM UTC: 
 treemap.c | 318 ++++++++++++++++++++++++++++++--------------------------------
 1 file changed, 156 insertions(+), 162 deletions(-)
 tests:  29|0
total_score: 70/70
4bc10d7
Fri 15 Sep 2023 05:51:58 PM UTC: 
 treemap.c | 32 ++++++++++++--------------------
 1 file changed, 12 insertions(+), 20 deletions(-)
 tests:  29|0
total_score: 70/70
2a4652f
